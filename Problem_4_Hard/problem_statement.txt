Daily Coding Problem: Problem #4 [Hard]

Good morning! Here's your coding interview problem for today.

This problem was asked by Stripe.

Given an array of integers, find the first missing positive integer in linear time and constant space. In other words, find the lowest positive integer that does not exist in the array. The array can contain duplicates and negative numbers as well.

For example, the input [3, 4, -1, 1] should give 2. The input [1, 2, 0] should give 3.

You can modify the input array in-place.

MY ANSWER:
first we note the answer is <= N+1 where N is the size of the input array
lets use a counting sort variant using a boolean array of size N to keep track of integers <=N we've hit,
a single pass will set the boolean array, then we do a second pass until we find x with hit[x] = false

linear time YES, but we must make a modification in order to solve in constant space

we note that the input array may contain non-positive integers that contribute nothing to the answer
therefore, we can erase the negatives we're given (set to 0) and then use the negative sign to stand in for our boolean array
